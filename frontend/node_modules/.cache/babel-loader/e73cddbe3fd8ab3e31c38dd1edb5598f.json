{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\SPLIT-EXPENSES\\\\splitback2\\\\frontend\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./Components/Home.jsx\";\nimport SplitBill from \"./Components/SplitBill/SplitBill.jsx\";\nimport Dashboard from \"./Components/Dashboard.jsx\";\nimport AddGroup from \"./Components/AddGroup/AddGroup.jsx\";\nimport \"./sass/styles.scss\";\nimport { BrowserRouter } from \"react-router-dom/cjs/react-router-dom.min\";\nimport Setting from \"./Components/Setting/setting.jsx\";\nimport Landing from \"./Components/Landing.jsx\";\nimport Login from \"./Components/Login.jsx\";\nimport Register from \"./Components/Register.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onUpdateGroupInfo = (nameOfGroup, names) => {\n      this.setState({\n        arrayOfGroups: [...this.state.arrayOfGroups, {\n          nameOfGroup: nameOfGroup,\n          people: names,\n          bills: []\n        }]\n      });\n    };\n\n    this.onUpdateNewInfoBill = (newDebts, nameOfBill, total, paidBy, nameOfCheckedGroup) => {\n      console.log(newDebts, nameOfCheckedGroup);\n      let groups = this.state.arrayOfGroups;\n      console.log(groups);\n      let checkedGroupIndx = groups.findIndex(group => group.nameOfGroup === nameOfCheckedGroup);\n      groups[checkedGroupIndx].bills = [...groups[checkedGroupIndx].bills, {\n        name: nameOfBill,\n        total: total,\n        debts: newDebts,\n        paidBy: paidBy\n      }];\n      this.setState({\n        arrayOfGroups: groups\n      });\n      localStorage.setItem(\"arrayOfGroups\", groups);\n    };\n\n    this.state = {\n      arrayOfGroups: []\n    };\n  }\n\n  componentDidMount() {\n    let isDark = localStorage.getItem(\"theme\", \"dark\");\n\n    if (isDark === \"dark\") {\n      document.documentElement.setAttribute(\"data-theme\", \"dark\");\n      localStorage.setItem(\"theme\", \"dark\");\n    } else {\n      document.documentElement.setAttribute(\"data-theme\", \"light\");\n      localStorage.setItem(\"theme\", \"light\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Landing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/home\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/register\",\n          component: Register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          render: props => /*#__PURE__*/_jsxDEV(AddGroup, { ...props,\n            onUpdateGroupInfo: this.onUpdateGroupInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          render: props => /*#__PURE__*/_jsxDEV(Dashboard, { ...props,\n            arrayOfGroups: this.state.arrayOfGroups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/split\",\n          render: props => /*#__PURE__*/_jsxDEV(SplitBill, { ...props,\n            arrayOfGroups: this.state.arrayOfGroups,\n            updateNewInfoBill: this.onUpdateNewInfoBill\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/setting\",\n          render: () => /*#__PURE__*/_jsxDEV(Setting, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/SPLIT-EXPENSES/splitback2/frontend/src/App.js"],"names":["React","Route","Switch","Home","SplitBill","Dashboard","AddGroup","BrowserRouter","Setting","Landing","Login","Register","App","Component","constructor","props","onUpdateGroupInfo","nameOfGroup","names","setState","arrayOfGroups","state","people","bills","onUpdateNewInfoBill","newDebts","nameOfBill","total","paidBy","nameOfCheckedGroup","console","log","groups","checkedGroupIndx","findIndex","group","name","debts","localStorage","setItem","componentDidMount","isDark","getItem","document","documentElement","setAttribute","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./Components/Home.jsx\";\nimport SplitBill from \"./Components/SplitBill/SplitBill.jsx\";\nimport Dashboard from \"./Components/Dashboard.jsx\";\nimport AddGroup from \"./Components/AddGroup/AddGroup.jsx\";\nimport \"./sass/styles.scss\";\nimport { BrowserRouter } from \"react-router-dom/cjs/react-router-dom.min\";\nimport Setting from \"./Components/Setting/setting.jsx\";\nimport Landing from \"./Components/Landing.jsx\";\nimport Login from \"./Components/Login.jsx\";\nimport Register from \"./Components/Register.jsx\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      arrayOfGroups: []\n    };\n  }\n\n  componentDidMount(){\n    let isDark = localStorage.getItem(\"theme\", \"dark\");\n    if(isDark === \"dark\"){\n      document.documentElement.setAttribute(\"data-theme\", \"dark\");\n      localStorage.setItem(\"theme\", \"dark\");\n    }else{\n      document.documentElement.setAttribute(\"data-theme\", \"light\");\n      localStorage.setItem(\"theme\", \"light\");\n    }\n    \n  }\n\n  onUpdateGroupInfo = (nameOfGroup, names) => {\n    this.setState({\n      arrayOfGroups: [\n        ...this.state.arrayOfGroups,\n        { nameOfGroup: nameOfGroup, people: names, bills: [] }\n      ]\n    });\n  };\n\n  onUpdateNewInfoBill = (\n    newDebts,\n    nameOfBill,\n    total,\n    paidBy,\n    nameOfCheckedGroup\n  ) => {\n    console.log(newDebts, nameOfCheckedGroup);\n    let groups = this.state.arrayOfGroups;\n    console.log(groups)\n    let checkedGroupIndx = groups.findIndex(\n      (group) => group.nameOfGroup === nameOfCheckedGroup\n    );\n    groups[checkedGroupIndx].bills = [\n      ...groups[checkedGroupIndx].bills,\n      { name: nameOfBill, total: total, debts: newDebts, paidBy: paidBy }\n    ];\n    this.setState({\n      arrayOfGroups: groups\n    });\n    localStorage.setItem(\"arrayOfGroups\", groups);\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n        <Route exact path=\"/\" component={Landing}/>\n          <Route exact path=\"/home\" component={Home}></Route>\n          <Route exact path=\"/login\" component={Login}></Route>\n          <Route exact path=\"/register\" component={Register}></Route>\n          <Route\n            path=\"/add\"\n            render={(props) => (\n              <AddGroup {...props} onUpdateGroupInfo={this.onUpdateGroupInfo} />\n            )}\n          ></Route>\n          <Route\n            path=\"/dashboard\"\n            render={(props) => (\n              <Dashboard {...props} arrayOfGroups={this.state.arrayOfGroups} />\n            )}\n          ></Route>\n          <Route\n            path=\"/split\"\n            render={(props) => (\n              <SplitBill\n                {...props}\n                arrayOfGroups={this.state.arrayOfGroups}\n                updateNewInfoBill={this.onUpdateNewInfoBill}\n              />\n            )}\n          ></Route>\n          <Route\n            path=\"/setting\"\n            render={() => (\n              <Setting/>\n            )}\n          ></Route>\n         \n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}