{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\SPLIT-EXPENSES\\\\splitback2\\\\frontend\\\\src\\\\Components\\\\Setting\\\\setting.jsx\";\nimport React from \"react\";\nimport \"../../sass/styles.scss\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass DarkMode extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isDark: false\n    };\n\n    this.toggleTheme = e => {\n      this.setState({\n        isDark: e.target.checked\n      }, () => {\n        if (this.state.isDark) {\n          this.setDark();\n        } else {\n          this.setLight();\n        }\n      });\n    };\n\n    this.setDark = () => {\n      localStorage.setItem(\"theme\", \"dark\");\n      document.documentElement.setAttribute(\"data-theme\", \"dark\");\n    };\n\n    this.setLight = () => {\n      localStorage.setItem(\"theme\", \"light\");\n      document.documentElement.setAttribute(\"data-theme\", \"light\");\n    };\n  }\n\n  componentDidMount() {\n    let isDark = localStorage.getItem(\"theme\", \"dark\");\n\n    if (isDark === \"dark\") {\n      this.setState({\n        isDark: true\n      }, () => {\n        this.setDark();\n      });\n    } else {\n      this.setState({\n        isDark: false\n      }, () => {\n        this.setLight();\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"exitBtn\",\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83C\\uDF1E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"toggle-theme\",\n          htmlFor: \"checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"checkbox\",\n            onChange: this.toggleTheme,\n            checked: this.state.isDark\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slider round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83C\\uDF12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default DarkMode;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/SPLIT-EXPENSES/splitback2/frontend/src/Components/Setting/setting.jsx"],"names":["React","Link","DarkMode","Component","state","isDark","toggleTheme","e","setState","target","checked","setDark","setLight","localStorage","setItem","document","documentElement","setAttribute","componentDidMount","getItem","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,MAAM,EAAE;AADF,KAD6B;;AAAA,SA4BrCC,WA5BqC,GA4BtBC,CAAD,IAAO;AACnB,WAAKC,QAAL,CACE;AACEH,QAAAA,MAAM,EAAEE,CAAC,CAACE,MAAF,CAASC;AADnB,OADF,EAIE,MAAM;AACJ,YAAI,KAAKN,KAAL,CAAWC,MAAf,EAAuB;AACrB,eAAKM,OAAL;AACD,SAFD,MAEO;AACL,eAAKC,QAAL;AACD;AACF,OAVH;AAYD,KAzCoC;;AAAA,SA2CrCD,OA3CqC,GA2C3B,MAAM;AACdE,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,MAA9B;AACAC,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,EAAoD,MAApD;AACD,KA9CoC;;AAAA,SAgDrCL,QAhDqC,GAgD1B,MAAM;AACfC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,OAA9B;AACAC,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,EAAoD,OAApD;AACD,KAnDoC;AAAA;;AAKrCC,EAAAA,iBAAiB,GAAG;AAClB,QAAIb,MAAM,GAAGQ,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8B,MAA9B,CAAb;;AACA,QAAId,MAAM,KAAK,MAAf,EAAuB;AACrB,WAAKG,QAAL,CACE;AACEH,QAAAA,MAAM,EAAE;AADV,OADF,EAIE,MAAM;AACJ,aAAKM,OAAL;AACD,OANH;AAQD,KATD,MASO;AACL,WAAKH,QAAL,CACE;AACEH,QAAAA,MAAM,EAAE;AADV,OADF,EAIE,MAAM;AACJ,aAAKO,QAAL;AACD,OANH;AAQD;AACF;;AA2BDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BAEE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,SAAhB;AAA0B,UAAA,EAAE,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,SAAS,EAAC,cAAjB;AAAgC,UAAA,OAAO,EAAC,UAAxC;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,EAAE,EAAC,UAFL;AAGE,YAAA,QAAQ,EAAE,KAAKd,WAHjB;AAIE,YAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC;AAJtB;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAM,YAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,oBADF;AAuBD;;AA7EoC;;AAgFvC,eAAeH,QAAf","sourcesContent":["import React from \"react\";\nimport \"../../sass/styles.scss\";\nimport { Link } from \"react-router-dom\";\n\nclass DarkMode extends React.Component {\n  state = {\n    isDark: false,\n  };\n\n  componentDidMount() {\n    let isDark = localStorage.getItem(\"theme\", \"dark\");\n    if (isDark === \"dark\") {\n      this.setState(\n        {\n          isDark: true,\n        },\n        () => {\n          this.setDark();\n        }\n      );\n    } else {\n      this.setState(\n        {\n          isDark: false,\n        },\n        () => {\n          this.setLight();\n        }\n      );\n    }\n  }\n\n  toggleTheme = (e) => {\n    this.setState(\n      {\n        isDark: e.target.checked,\n      },\n      () => {\n        if (this.state.isDark) {\n          this.setDark();\n        } else {\n          this.setLight();\n        }\n      }\n    );\n  };\n\n  setDark = () => {\n    localStorage.setItem(\"theme\", \"dark\");\n    document.documentElement.setAttribute(\"data-theme\", \"dark\");\n  };\n\n  setLight = () => {\n    localStorage.setItem(\"theme\", \"light\");\n    document.documentElement.setAttribute(\"data-theme\", \"light\");\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"menu\">\n          \n          <Link className=\"exitBtn\" to=\"/\">\n            Home\n          </Link>\n        </div>\n        <div className=\"toggle-box\">\n          <span>ðŸŒž</span>\n          <label className=\"toggle-theme\" htmlFor=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id=\"checkbox\"\n              onChange={this.toggleTheme}\n              checked={this.state.isDark}\n            />\n            <span className=\"slider round\"></span>\n          </label>\n          <span>ðŸŒ’</span>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default DarkMode;\n"]},"metadata":{},"sourceType":"module"}