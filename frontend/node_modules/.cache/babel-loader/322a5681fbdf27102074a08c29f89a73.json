{"ast":null,"code":"var _jsxFileName = \"G:\\\\react projects\\\\splitback2\\\\frontend\\\\src\\\\Components\\\\SplitBill\\\\SplitOptions.jsx\";\nimport React from \"react\";\nimport \"../../sass/styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SplitOptions extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        chosedOption: e.target.value\n      }, () => {\n        this.props.arrayOfGroups.forEach(group => {\n          if (group.nameOfGroup === this.state.chosedOption) {\n            this.setState({\n              checkedGroup: group\n            }, () => {\n              this.props.checkOption(this.state.checkedGroup);\n            });\n          }\n        });\n      });\n    };\n\n    this.isEmpty = () => {\n      if (this.props.arrayOfGroups.length !== 0) {\n        return true;\n      }\n    };\n\n    this.state = {\n      chosedOption: \"Add to group\",\n      checkedGroup: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"options\",\n      value: this.state.chosedOption,\n      onChange: e => this.handleChange(e),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Add to group\",\n        disabled: true,\n        children: \"Add to group...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), this.isEmpty() && this.props.arrayOfGroups.map((group, indx) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: group.nameOfGroup,\n        children: group.nameOfGroup\n      }, indx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SplitOptions;","map":{"version":3,"sources":["G:/react projects/splitback2/frontend/src/Components/SplitBill/SplitOptions.jsx"],"names":["React","SplitOptions","Component","constructor","props","handleChange","e","setState","chosedOption","target","value","arrayOfGroups","forEach","group","nameOfGroup","state","checkedGroup","checkOption","isEmpty","length","render","map","indx"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;;;AAEA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,YAPmB,GAOHC,CAAD,IAAO;AACpB,WAAKC,QAAL,CACE;AACEC,QAAAA,YAAY,EAAEF,CAAC,CAACG,MAAF,CAASC;AADzB,OADF,EAIE,MAAM;AACJ,aAAKN,KAAL,CAAWO,aAAX,CAAyBC,OAAzB,CAAkCC,KAAD,IAAW;AAC1C,cAAIA,KAAK,CAACC,WAAN,KAAsB,KAAKC,KAAL,CAAWP,YAArC,EAAmD;AACjD,iBAAKD,QAAL,CACE;AACES,cAAAA,YAAY,EAAEH;AADhB,aADF,EAIE,MAAM;AACJ,mBAAKT,KAAL,CAAWa,WAAX,CAAuB,KAAKF,KAAL,CAAWC,YAAlC;AACD,aANH;AAQD;AACF,SAXD;AAYD,OAjBH;AAmBD,KA3BkB;;AAAA,SA6BnBE,OA7BmB,GA6BT,MAAM;AACd,UAAI,KAAKd,KAAL,CAAWO,aAAX,CAAyBQ,MAAzB,KAAoC,CAAxC,EAA2C;AACzC,eAAO,IAAP;AACD;AACF,KAjCkB;;AAEjB,SAAKJ,KAAL,GAAa;AACXP,MAAAA,YAAY,EAAE,cADH;AAEXQ,MAAAA,YAAY,EAAE;AAFH,KAAb;AAID;;AA6BDI,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,SAAS,EAAC,SADZ;AAEE,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWP,YAFpB;AAGE,MAAA,QAAQ,EAAGF,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAHnB;AAAA,8BAKE;AAAQ,QAAA,KAAK,EAAC,cAAd;AAA6B,QAAA,QAAQ,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAQG,KAAKY,OAAL,MACC,KAAKd,KAAL,CAAWO,aAAX,CAAyBU,GAAzB,CAA6B,CAACR,KAAD,EAAQS,IAAR,kBAC3B;AAAmB,QAAA,KAAK,EAAET,KAAK,CAACC,WAAhC;AAAA,kBACGD,KAAK,CAACC;AADT,SAAaQ,IAAb;AAAA;AAAA;AAAA;AAAA,cADF,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAtDwC;;AAyD3C,eAAerB,YAAf","sourcesContent":["import React from \"react\";\nimport \"../../sass/styles.scss\";\n\nclass SplitOptions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chosedOption: \"Add to group\",\n      checkedGroup: \"\",\n    };\n  }\n  handleChange = (e) => {\n    this.setState(\n      {\n        chosedOption: e.target.value,\n      },\n      () => {\n        this.props.arrayOfGroups.forEach((group) => {\n          if (group.nameOfGroup === this.state.chosedOption) {\n            this.setState(\n              {\n                checkedGroup: group,\n              },\n              () => {\n                this.props.checkOption(this.state.checkedGroup);\n              }\n            );\n          }\n        });\n      }\n    );\n  };\n\n  isEmpty = () => {\n    if (this.props.arrayOfGroups.length !== 0) {\n      return true;\n    }\n  };\n\n  render() {\n    return (\n      <select\n        className=\"options\"\n        value={this.state.chosedOption}\n        onChange={(e) => this.handleChange(e)}\n      >\n        <option value=\"Add to group\" disabled>\n          Add to group...\n        </option>\n        {this.isEmpty() &&\n          this.props.arrayOfGroups.map((group, indx) => (\n            <option key={indx} value={group.nameOfGroup}>\n              {group.nameOfGroup}\n            </option>\n          ))}\n      </select>\n    );\n  }\n}\n\nexport default SplitOptions;\n"]},"metadata":{},"sourceType":"module"}